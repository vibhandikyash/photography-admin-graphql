version: "3.3"

services:
  app:
    container_name: ${NODE_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: .
    env_file:
      - .env.dev
    volumes:
      - .:/app
      - app_node_modules:/app/node_modules
    command: npm run start
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    depends_on:
      # - postgres
      - redis
    networks:
      - wedlancer-server-network
    links:
      # - postgres
      - redis

  # postgres:
  #   container_name: ${POSTGRES_CONTAINER_NAME}
  #   image: ${POSTGRES_CONTAINER_IMAGE}
  #   environment:
  #     POSTGRES_HOST: ${POSTGRES_DB_HOST}
  #     POSTGRES_USER: ${POSTGRES_DB_USER}
  #     POSTGRES_DB: ${POSTGRES_DB_NAME}
  #     POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
  #   ports:
  #     - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
  #   volumes:
  #     - ../docker-data/${NODE_CONTAINER_NAME}/postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - wedlancer-server-network

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: ${REDIS_CONTAINER_IMAGE}
    command:
      [
        "redis-server",
        "--appendonly",
        "yes",
        "--requirepass",
        "${REDIS_PASSWORD}",
      ]
    ports:
      - ${REDIS_LOCAL_PORT}:${REDIS_DOCKER_PORT}
    volumes:
      - ../docker-data/${NODE_CONTAINER_NAME}/redis_data:/data
    networks:
      - wedlancer-server-network

networks:
  default:
  wedlancer-server-network:
    external: true

volumes:
  app_node_modules: null
